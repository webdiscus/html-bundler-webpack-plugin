"use strict";(self.webpackChunkhtml_bundler_docs=self.webpackChunkhtml_bundler_docs||[]).push([[4821],{8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var i=n(6540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}},9932:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"contribute/index","title":"Contribute","description":"- Questions and Suggestions","source":"@site/docs/contribute/index.md","sourceDirName":"contribute","slug":"/contribute/","permalink":"/html-bundler-webpack-plugin/contribute/","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-docs-gh/tree/master/docs/contribute/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"contributeSidebar","next":{"title":"Style Guide","permalink":"/html-bundler-webpack-plugin/contribute/docs-style-guide"}}');var t=n(4848),o=n(8453);const r={sidebar_position:1},l="Contribute",c={},a=[{value:"<a></a> Got a Question or Suggestion?",id:"-got-a-question-or-suggestion",level:2},{value:"<a></a> Found an Issue or Bug?",id:"-found-an-issue-or-bug",level:2},{value:"<a></a> Feature Requests?",id:"-feature-requests",level:2},{value:"<a></a> Pull Request Submission Guidelines",id:"-pull-request-submission-guidelines",level:2},{value:"<a></a> Commit Conventions",id:"-commit-conventions",level:2},{value:"Type",id:"type",level:3},{value:"Scope",id:"scope",level:3},{value:"Subject",id:"subject",level:3},{value:"Body",id:"body",level:3},{value:"Footer",id:"footer",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"contribute",children:"Contribute"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#question",children:"Questions and Suggestions"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#issue",children:"Issues and Bugs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#feature",children:"Feature Requests"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#submit-pr",children:"Pull Request Submission Guidelines"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#commit",children:"Commit Message Conventions"})}),"\n"]}),"\n",(0,t.jsxs)(s.h2,{id:"-got-a-question-or-suggestion",children:[(0,t.jsx)("a",{name:"question"})," Got a Question or Suggestion?"]}),"\n",(0,t.jsxs)(s.p,{children:["If you have questions or suggestions, please create a new ",(0,t.jsx)(s.a,{href:"https://github.com/webdiscus/html-bundler-webpack-plugin/discussions",children:"discussion"}),"."]}),"\n",(0,t.jsxs)(s.h2,{id:"-found-an-issue-or-bug",children:[(0,t.jsx)("a",{name:"issue"})," Found an Issue or Bug?"]}),"\n",(0,t.jsx)(s.p,{children:"Before you submit an issue, please search the issue tracker,\nmaybe an issue for your problem already exists and the discussion might inform you of workarounds readily available."}),"\n",(0,t.jsx)(s.p,{children:"We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it."}),"\n",(0,t.jsx)(s.p,{children:"Tell us versions of your environment:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"OS: macOS, Linux, Windows"}),"\n",(0,t.jsx)(s.li,{children:"version of Node.js"}),"\n",(0,t.jsx)(s.li,{children:"version of Webpack"}),"\n",(0,t.jsx)(s.li,{children:"version of the Plugin"}),"\n",(0,t.jsx)(s.li,{children:"the use-case that fails"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Ideally create a small repository with a reproducible issue."}),"\n",(0,t.jsxs)(s.h2,{id:"-feature-requests",children:[(0,t.jsx)("a",{name:"feature"})," Feature Requests?"]}),"\n",(0,t.jsxs)(s.p,{children:["You can ",(0,t.jsx)(s.em,{children:"request"})," a new feature by creating an ",(0,t.jsx)(s.a,{href:"https://github.com/webdiscus/html-bundler-webpack-plugin/issues",children:"issue"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The title must begins with ",(0,t.jsx)(s.code,{children:"[FEATURE]"}),"."]}),"\n",(0,t.jsxs)(s.h2,{id:"-pull-request-submission-guidelines",children:[(0,t.jsx)("a",{name:"submit-pr"})," Pull Request Submission Guidelines"]}),"\n",(0,t.jsx)(s.p,{children:"Before you submit your Pull Request (PR) consider the following guidelines:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Commit your changes using a descriptive commit message that follows our ",(0,t.jsx)(s.a,{href:"#commit",children:"commit message conventions"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Your PR must have only ",(0,t.jsx)(s.code,{children:"one"})," commit. If you have many commits, please squash all commits into one."]}),"\n",(0,t.jsxs)(s.li,{children:["Please test your pull request:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["new/changed code ",(0,t.jsx)(s.code,{children:"must"})," be completely covered, at last ",(0,t.jsx)(s.code,{children:"95%"})]}),"\n",(0,t.jsxs)(s.li,{children:["create a new test case under ",(0,t.jsx)(s.code,{children:"./test/cases/"})," directory\non base the ",(0,t.jsx)(s.a,{href:"https://github.com/webdiscus/html-bundler-webpack-plugin/tree/master/test/cases/issue-0-base-template",children:"base issue template"})," (simple one page)\nor ",(0,t.jsx)(s.a,{href:"https://github.com/webdiscus/html-bundler-webpack-plugin/tree/master/test/cases/issue-0-advanced-template",children:"advanced issue template"})," (multiple pages)"]}),"\n",(0,t.jsxs)(s.li,{children:["all already existing tests must be passed: ",(0,t.jsx)(s.code,{children:"npm test"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.h2,{id:"-commit-conventions",children:[(0,t.jsx)("a",{name:"commit"})," Commit Conventions"]}),"\n",(0,t.jsxs)(s.p,{children:["Each commit message consists of a ",(0,t.jsx)(s.strong,{children:"header"}),", a ",(0,t.jsx)(s.strong,{children:"body"})," and a ",(0,t.jsx)(s.strong,{children:"footer"}),". The header has a special\nformat that includes a ",(0,t.jsx)(s.strong,{children:"type"}),", a ",(0,t.jsx)(s.strong,{children:"scope"})," and a ",(0,t.jsx)(s.strong,{children:"subject"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"header"})," is mandatory and the ",(0,t.jsx)(s.strong,{children:"scope"})," of the header is optional."]}),"\n",(0,t.jsx)(s.p,{children:"Any line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools."}),"\n",(0,t.jsxs)(s.p,{children:["The footer should contain a ",(0,t.jsx)(s.a,{href:"https://help.github.com/articles/closing-issues-via-commit-messages/",children:"closing reference to an issue"})," if any."]}),"\n",(0,t.jsx)(s.p,{children:"Examples:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"docs(readme): unpdate usage cases\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"fix: error `asset not found` on Windows\n"})}),"\n",(0,t.jsx)(s.h3,{id:"type",children:"Type"}),"\n",(0,t.jsx)(s.p,{children:"Must be one of the following:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"chore"}),": changes that fall outside of build / docs that do not effect source code (example scopes: package, defaults)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"docs"}),": documentation only changes (example scopes: readme, changelog)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"feat"}),": a new feature"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"fix"}),": a bug fix"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"perf"}),": a code change that improves performance"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"refactor"}),": a code change that neither fixes a bug nor adds a feature"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"style"}),": changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"test"}),": addition of or updates to Jest tests"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"scope",children:"Scope"}),"\n",(0,t.jsxs)(s.p,{children:["The scope is subjective & depends on the ",(0,t.jsx)(s.code,{children:"type"})," see above. A good example would be a change to a particular class / module."]}),"\n",(0,t.jsx)(s.h3,{id:"subject",children:"Subject"}),"\n",(0,t.jsx)(s.p,{children:"The subject contains a succinct description of the change:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'use the imperative, present tense: "change" not "changed" nor "changes"'}),"\n",(0,t.jsx)(s.li,{children:"don't capitalize the first letter"}),"\n",(0,t.jsx)(s.li,{children:"no dot (.) at the end"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"body",children:"Body"}),"\n",(0,t.jsxs)(s.p,{children:["Just as in the ",(0,t.jsx)(s.strong,{children:"subject"}),', use the imperative, present tense: "change" not "changed" nor "changes".\nThe body should include the description of the change.']}),"\n",(0,t.jsx)(s.h3,{id:"footer",children:"Footer"}),"\n",(0,t.jsx)(s.p,{children:"The footer should contain the reference GitHub issues that this commit closes."})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);