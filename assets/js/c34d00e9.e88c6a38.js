"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8539],{2478:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Options/PluginOptions/css","title":"css (options for CSS)","description":"Option: css","source":"@site/docs/Options/PluginOptions/css.mdx","sourceDirName":"Options/PluginOptions","slug":"/Options/PluginOptions/css","permalink":"/html-bundler-webpack-plugin/Options/PluginOptions/css","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-webpack-plugin/tree/master/docs/Options/PluginOptions/css.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50,"title":"css (options for CSS)"},"sidebar":"docsSidebar","previous":{"title":"js (options for JS)","permalink":"/html-bundler-webpack-plugin/Options/PluginOptions/js"},"next":{"title":"svg (options for SVG)","permalink":"/html-bundler-webpack-plugin/Options/PluginOptions/svg"}}');var t=s(4848),l=s(8453);const o={sidebar_position:50,title:"css (options for CSS)"},r="Options for CSS",c={},a=[{value:"<code>css.hot</code> option",id:"csshot-option",level:4}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"options-for-css",children:"Options for CSS"})}),"\n",(0,t.jsxs)(n.p,{children:["Option: ",(0,t.jsx)(n.code,{children:"css"})]}),"\n",(0,t.jsx)(n.p,{children:"Type:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type CssOptions = {\n  test?: RegExp;\n  filename?: FilenameTemplate;\n  chunkFilename?: FilenameTemplate;\n  outputPath?: string;\n  inline?: 'auto' | boolean;\n  hot?: boolean;\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"Default properties:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"{\n  test: /\\.(css|scss|sass|less|styl)$/,\n  filename: '[name].css',\n  chunkFilename: '[name].css',\n  outputPath: null,\n  inline: false,\n  hot: false,\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"test"})," - an RegEpx to process all source styles that pass test assertion"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filename"})," - an output filename of extracted CSS. Details see by ",(0,t.jsx)(n.a,{href:"#option-filename",children:"filename option"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chunkFilename"})," - an output filename of non-initial chunk files, e.g., a style file imported in JavaScript."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"outputPath"})," - an output path of extracted CSS. Details see by ",(0,t.jsx)(n.a,{href:"#option-outputpath",children:"outputPath option"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inline"})," - inject CSS into into HTML at render time, available values:"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"false"})," - stores CSS in an output file (",(0,t.jsx)(n.strong,{children:"defaults"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"true"})," - adds CSS to the DOM by injecting a ",(0,t.jsx)(n.code,{children:"<style>"})," tag"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'auto'"})," - in ",(0,t.jsx)(n.code,{children:"development"})," mode - adds to DOM, in ",(0,t.jsx)(n.code,{children:"production"})," mode - stores as a file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hot"})," - inject CSS into the DOM at runtime and enable HMR (hot update CSS without a full reload),",(0,t.jsx)(n.br,{}),"\n","similar to how it works in ",(0,t.jsx)(n.a,{href:"https://github.com/webpack-contrib/style-loader",children:"style-loader"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["All source style files specified in ",(0,t.jsx)(n.code,{children:'<link href="..." rel="stylesheet">'})," are automatically resolved,\nand CSS will be extracted to output file. The source filename will be replaced with the output filename."]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<link href="./style.scss" rel="stylesheet" />\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Don't import source styles in JavaScript. Styles should be specified directly in HTML.",(0,t.jsx)(n.br,{}),"\n","Don't define source JS files in Webpack entry. Scripts must be specified directly in HTML."]})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The default CSS output filename is ",(0,t.jsx)(n.code,{children:"[name].css"}),".\nYou can specify your own filename using ",(0,t.jsx)(n.a,{href:"https://webpack.js.org/configuration/output/#outputfilename",children:"webpack filename substitutions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const HtmlBundlerPlugin = require('html-bundler-webpack-plugin');\nmodule.exports = {\n  plugins: [\n    new HtmlBundlerPlugin({\n      css: {\n        filename: 'css/[name].[contenthash:8].css',\n      },\n    }),\n  ],\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"[name]"})," is the base filename of a loaded style.\nFor example, if source file is ",(0,t.jsx)(n.code,{children:"style.scss"}),", then output filename will be ",(0,t.jsx)(n.code,{children:"css/style.1234abcd.css"}),".",(0,t.jsx)(n.br,{}),"\n","If you want to have a different output filename, you can use the ",(0,t.jsx)(n.code,{children:"filename"})," options as the ",(0,t.jsx)(n.a,{href:"https://webpack.js.org/configuration/output/#outputfilename",children:"function"}),"."]}),"\n",(0,t.jsx)("a",{id:"option-css-hot",name:"option-css-hot"}),"\n",(0,t.jsxs)(n.h4,{id:"csshot-option",children:[(0,t.jsx)(n.code,{children:"css.hot"})," option"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)(n.p,{children:"\u26a0\ufe0f Limitation"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["HMR works only for styles imported in JavaScript files. Doesn't works for styles defined directly in HTML via ",(0,t.jsx)(n.code,{children:"link"})," tag."]}),"\n",(0,t.jsxs)(n.li,{children:["Hot update without a full reload works only for styles imported in a last JavaScript file.",(0,t.jsx)(n.br,{}),"\n","If you have many JS files defined in HTML, where are imported styles, and change a style file imported in the first JS file,\nthen changes will not be detected in HMR module. You should reload the browser manually.\nThis behavior is a BUG in Webpack. The ",(0,t.jsx)(n.a,{href:"https://github.com/webpack-contrib/style-loader",children:"style-loader"})," has exactly same limitation."]}),"\n"]})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If you use the ",(0,t.jsx)(n.a,{href:"#setup-live-reload",children:"Live Reload"})," configuration, then be sure to exclude the style files (CSS/SCSS) from watching,\notherwise after changes a style file, a page will be full reloaded."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"devServer"})," is configured for HRM with styles, then after changing the styles defined in HTML, ",(0,t.jsx)(n.code,{children:"Live Reload"})," will not work for them.\nYou should then reload the browser self."]})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configuration of ",(0,t.jsx)(n.code,{children:"devServer"})," to enable HMR:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"devServer: {\n  static: {\n    directory: path.join(__dirname, 'dist'),\n  },\n  watchFiles: {\n    paths: ['src/**/*.(html|eta)'], // <= exclude *.s?css from watching\n    options: {\n      usePolling: true,\n    },\n  },\n},\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"To enable HMR for all style files without a full reload, import all those styles in one JS file."})}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:["Don't use ",(0,t.jsx)(n.code,{children:"mini-css-extract-plugin"})," because the bundler plugin extracts CSS much faster than other plugins."]}),(0,t.jsxs)(n.p,{children:["Don't use ",(0,t.jsx)(n.code,{children:"resolve-url-loader"})," because the bundler plugin resolves all URLs in CSS, including assets from node modules."]}),(0,t.jsxs)(n.p,{children:["Don't use ",(0,t.jsx)(n.code,{children:"style-loader"})," because the bundler plugin can auto inline CSS and HMR."]})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(6540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);