"use strict";(self.webpackChunkhtml_bundler_docs=self.webpackChunkhtml_bundler_docs||[]).push([[6645],{3548:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"faq/split-css","title":"How to split CSS files","description":"Splitting CSS to many chunks is principally impossible. Splitting works only for JS files.","source":"@site/docs/faq/split-css.md","sourceDirName":"faq","slug":"/faq/split-css","permalink":"/html-bundler-webpack-plugin/faq/split-css","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-docs-gh/tree/master/docs/faq/split-css.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"faqSidebar","previous":{"title":"How to disable resolving in commented out tag","permalink":"/html-bundler-webpack-plugin/faq/disable-resolving-in-commented-out-tag"},"next":{"title":"How to configure splitChunks","permalink":"/html-bundler-webpack-plugin/faq/split-chunks"}}');var l=n(4848),o=n(8453);const i={sidebar_position:4},r="How to split CSS files",c={},a=[];function d(e){const s={admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"how-to-split-css-files",children:"How to split CSS files"})}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsx)(s.admonition,{type:"warning",children:(0,l.jsx)(s.p,{children:"Splitting CSS to many chunks is principally impossible. Splitting works only for JS files."})}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["Using the bundler plugin, all your style source files should be specified directly in the template.\nYou can import style files in JavaScript, like it works using the ",(0,l.jsx)(s.code,{children:"mini-css-extract-plugin"})," and ",(0,l.jsx)(s.code,{children:"html-webpack-plugin"}),",\nbut it is a ",(0,l.jsx)(s.strong,{children:"bad practice"})," and processing is ",(0,l.jsx)(s.strong,{children:"slower"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"You can separate the styles into multiple bundles yourself."}),"\n",(0,l.jsx)(s.p,{children:"For example, there are style files used in your app:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"- components/banner/style.scss 150 KB\n- components/button/style.scss  50 KB\n- components/menu/style.scss    50 KB\n- components/modal/style.scss  100 KB\n- components/panel/style.scss  100 KB\n- styles/main.scss  250 KB\n"})}),"\n",(0,l.jsx)(s.p,{children:"We want to have a bundle file ~250 KB, then create the bundles manually:"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.em,{children:"styles/bundle01.scss"})," 200 KB"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scss",children:"@use '../components/banner/style.scss';\n@use '../components/button/style.scss';\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.em,{children:"styles/bundle02.scss"})," 250 KB"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scss",children:"@use '../components/menu/style.scss';\n@use '../components/modal/style.scss';\n@use '../components/panel/style.scss';\n"})}),"\n",(0,l.jsx)(s.p,{children:"Add the bundles in the template:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-html",children:'<html>\n  <head>\n    <title>Home</title>\n    <link href="./styles/bundle01.scss" rel="stylesheet" />\n    <link href="./styles/bundle02.scss" rel="stylesheet" />\n    <link href="./styles/main.scss" rel="stylesheet" />\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n  </body>\n</html>\n'})}),"\n",(0,l.jsxs)(s.p,{children:["If you use vendor styles in your style file, then vendor styles will not be saved to a separate file, because ",(0,l.jsx)(s.code,{children:"sass-loader"})," generates one CSS bundle code."]}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"styles.scss"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scss",children:"@use 'bootstrap/scss/bootstrap';\nbody {\n  color: bootstrap.$primary;\n}\n// ...\n"})}),"\n",(0,l.jsx)(s.p,{children:"If you want save module styles separate from your styles, then load them in a template separately:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-html",children:'<html>\n  <head>\n    <title>Home</title>\n    \x3c!-- include module styles --\x3e\n    <link href="bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />\n    \x3c!-- include your styles --\x3e\n    <link href="./style.scss" rel="stylesheet" />\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    <script src="./main.js"><\/script>\n  </body>\n</html>\n'})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>r});var t=n(6540);const l={},o=t.createContext(l);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);