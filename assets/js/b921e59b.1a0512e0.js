"use strict";(self.webpackChunkhtml_bundler_docs=self.webpackChunkhtml_bundler_docs||[]).push([[1212],{8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},9725:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"guides/preprocessor/liquidjs","title":"LiquidJS","description":"Link: LiquidJS","source":"@site/docs/guides/preprocessor/liquidjs.mdx","sourceDirName":"guides/preprocessor","slug":"/guides/preprocessor/liquidjs","permalink":"/html-bundler-webpack-plugin/guides/preprocessor/liquidjs","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-docs-gh/tree/master/docs/guides/preprocessor/liquidjs.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"guidesSidebar","previous":{"title":"Handlebars","permalink":"/html-bundler-webpack-plugin/guides/preprocessor/handlebars"},"next":{"title":"Mustache","permalink":"/html-bundler-webpack-plugin/guides/preprocessor/mustache"}}');var r=i(4848),t=i(8453);const d={sidebar_position:2},l="LiquidJS",o={},c=[];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"liquidjs",children:"LiquidJS"})}),"\n",(0,r.jsxs)(n.p,{children:["Link: ",(0,r.jsx)(n.a,{href:"https://github.com/harttle/liquidjs",children:"LiquidJS"})]}),"\n",(0,r.jsxs)(n.p,{children:["You need to install the ",(0,r.jsx)(n.code,{children:"liquidjs"})," package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm i -D liquidjs\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For example, there is the template ",(0,r.jsx)(n.em,{children:"src/views/page/index.liquid"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<html>\n  <body>\n    <h1>{{ headline }}!</h1>\n    <ul class="people">\n      {% for name in people %}\n      <li class="name">{{ name }}</li>\n      {% endfor %}\n    </ul>\n  </body>\n</html>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Add the template compiler to ",(0,r.jsx)(n.code,{children:"preprocessor"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const HtmlBundlerPlugin = require('html-bundler-webpack-plugin');\nconst { Liquid } = require('liquidjs');\n\nconst LiquidEngine = new Liquid();\n\nmodule.exports = {\n  plugins: [\n    new HtmlBundlerPlugin({\n      test: /\\.(html|liquid)$/, // add this option to match *.liquid files in entry\n      entry: {\n        index: {\n          import: './src/views/page/index.liquid',\n          data: {\n            headline: 'Breaking Bad',\n            people: ['Walter White', 'Jesse Pinkman'],\n          },\n        },\n      },\n      // async parseAndRender method return the promise\n      preprocessor: (content, { data }) => LiquidEngine.parseAndRender(content, data),\n    }),\n  ],\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);