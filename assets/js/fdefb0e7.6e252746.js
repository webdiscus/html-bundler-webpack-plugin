"use strict";(self.webpackChunkhtml_bundler_docs=self.webpackChunkhtml_bundler_docs||[]).push([[7026],{4136:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/preload-fonts","title":"Preload fonts","description":"To preload resources such as fonts, use the preload plugin option.","source":"@site/docs/guides/preload-fonts.mdx","sourceDirName":"guides","slug":"/guides/preload-fonts","permalink":"/html-bundler-webpack-plugin/guides/preload-fonts","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-docs-gh/tree/master/docs/guides/preload-fonts.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"guidesSidebar","previous":{"title":"Guides","permalink":"/html-bundler-webpack-plugin/guides/"},"next":{"title":"Inline CSS in HTML","permalink":"/html-bundler-webpack-plugin/guides/inline-css"}}');var s=o(4848),l=o(8453);const r={sidebar_position:2},i="Preload fonts",a={},d=[];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"preload-fonts",children:"Preload fonts"})}),"\n",(0,s.jsxs)(n.p,{children:["To preload resources such as fonts, use the ",(0,s.jsx)(n.a,{href:"#option-preload",children:"preload"})," plugin option."]}),"\n",(0,s.jsx)(n.p,{children:"For example, there is the style used a font that should be preloaded:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"styles.scss"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scss",children:"@font-face {\n  font-family: 'Monaco';\n  // load source fonts using the `@fonts` Webpack alias to the font directory\n  src:\n    local(Monaco Regular),\n    url('@fonts/monaco.woff2') format('woff2'),\n    url('@fonts/monaco.woff') format('woff');\n}\n\nbody {\n  font-family: 'Monaco', serif;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The template ",(0,s.jsx)(n.em,{children:"index.html"})," where is loaded the source style:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    <title>Demo</title>\n    \x3c!-- include source style --\x3e\n    <link href="./style.scss" rel="stylesheet" />\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n  </body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Use the minimal Webpack config:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const HtmlBundlerPlugin = require('html-bundler-webpack-plugin');\n\nmodule.exports = {\n  resolve: {\n    alias: {\n      // Alias to the font directory\n      '@fonts': path.join(__dirname, 'src/assets/fonts/'),\n    },\n  },\n  plugins: [\n    new HtmlBundlerPlugin({\n      entry: {\n        index: 'src/views/index.html',\n      },\n      css: {\n        filename: 'css/[name].[contenthash:8].css',\n      },\n      preload: [\n        {\n          // Preload matched fonts\n          test: /\\.(woff2?)$/,\n          attributes: { as: 'font' },\n        },\n      ],\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.(s?css|sass)$/,\n        use: ['css-loader', 'sass-loader'],\n      },\n      {\n        test: /\\.(woff2?)$/,\n        type: 'asset/resource',\n        generator: {\n          filename: 'fonts/[name][ext]',\n        },\n      },\n    ],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Font preloading requires the ",(0,s.jsx)(n.code,{children:"crossorigin"})," attribute to be set.\nSee ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload#what_types_of_content_can_be_preloaded",children:"font preload"}),"."]})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The generated HTML contains the preload tag with the font:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    <title>Demo</title>\n    \x3c!-- preload fonts detected in style --\x3e\n    <link rel="preload" href="fonts/monaco.woff2" as="font" type="font/woff2" crossorigin />\n    <link rel="preload" href="fonts/monaco.woff" as="font" type="font/woff" crossorigin />\n    \x3c!-- compiled style --\x3e\n    <link href="css/style.1f4faaff.css" rel="stylesheet" />\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n  </body>\n</html>\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"You don't need a plugin to copy files from source directory to public.\nAll source fonts will be coped to output directory automatically."})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(6540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);