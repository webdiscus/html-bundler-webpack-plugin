"use strict";(self.webpackChunkhtml_bundler_docs=self.webpackChunkhtml_bundler_docs||[]).push([[6949],{4130:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"guides/inline-js","title":"Inline JS in HTML","description":"There are two ways to inline CSS in HTML:","source":"@site/docs/guides/inline-js.md","sourceDirName":"guides","slug":"/guides/inline-js","permalink":"/html-bundler-webpack-plugin/guides/inline-js","draft":false,"unlisted":false,"editUrl":"https://github.com/webdiscus/html-bundler-docs/tree/docusaurus/docs/guides/inline-js.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"guidesSidebar","previous":{"title":"Inline CSS in HTML","permalink":"/html-bundler-webpack-plugin/guides/inline-css"},"next":{"title":"Inline images in HTML","permalink":"/html-bundler-webpack-plugin/guides/inline-images"}}');var s=i(4848),r=i(8453);const t={sidebar_position:3},c="Inline JS in HTML",d={},o=[{value:"Inline all JS files",id:"inline-all-js-files",level:2},{value:"Inline a single JS file",id:"inline-a-single-js-file",level:2}];function a(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"inline-js-in-html",children:"Inline JS in HTML"})}),"\n",(0,s.jsx)(n.p,{children:"There are two ways to inline CSS in HTML:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["inline all JS globally with ",(0,s.jsx)(n.code,{children:"js.inline"})," ",(0,s.jsx)(n.a,{href:"/plugin-options-js",children:"option"})]}),"\n",(0,s.jsxs)(n.li,{children:["inline single JS with ",(0,s.jsx)(n.code,{children:"?inline"})," query added to a filename"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"inline"})," option can take the following values: ",(0,s.jsx)(n.code,{children:"false"}),", ",(0,s.jsx)(n.code,{children:"true"})," and ",(0,s.jsx)(n.code,{children:"'auto'"}),".\nFor details see the ",(0,s.jsx)(n.a,{href:"/plugin-options-js",children:"inline option"}),"."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The individual ",(0,s.jsx)(n.code,{children:"?inline"})," query parameter takes precedence over the globally ",(0,s.jsx)(n.code,{children:"js.inline"})," option.",(0,s.jsx)(n.br,{}),"\n","For example, if ",(0,s.jsx)(n.code,{children:"js.inline = true"})," and in HTML a single file has the ",(0,s.jsx)(n.code,{children:"?inline=false"})," query,\nthis file will be extracted in an output file, while all other scripts will be inlined."]})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For example, there are two JS files:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"main.js"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log('>> main.js');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"script.js"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log('>> script.js');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There is the ",(0,s.jsx)(n.em,{children:"./src/views/index.html"})," with both script files:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    <script src="./main.js" defer="defer"><\/script>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    <script src="./script.js"><\/script>\n  </body>\n</html>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"inline-all-js-files",children:"Inline all JS files"}),"\n",(0,s.jsxs)(n.p,{children:["To inline all JS globally add the ",(0,s.jsx)(n.code,{children:"js.inline"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const HtmlBundlerPlugin = require('html-bundler-webpack-plugin');\nmodule.exports = {\n  plugins: [\n    new HtmlBundlerPlugin({\n      entry: {\n        index: 'src/views/index.html',\n      },\n      js: {\n        // injects compiled JavaScript as a `<script>` tag into DOM\n        inline: true,\n      },\n    }),\n  ],\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"The generated HTML contains inlined JS scripts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<html>\n  <head>\n    <script>\n      (() => {\n        'use strict';\n        console.log('>> main.js');\n      })();\n    <\/script>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    <script>\n      (() => {\n        'use strict';\n        console.log('>> script.js');\n      })();\n    <\/script>\n  </body>\n</html>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"inline-a-single-js-file",children:"Inline a single JS file"}),"\n",(0,s.jsxs)(n.p,{children:["Define the ",(0,s.jsx)(n.code,{children:"js.filename"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const HtmlBundlerPlugin = require('html-bundler-webpack-plugin');\nmodule.exports = {\n  plugins: [\n    new HtmlBundlerPlugin({\n      entry: {\n        index: 'src/views/index.html',\n      },\n      js: {\n        filename: 'js/[name].[contenthash:8].js', // Output JS filename\n      },\n    }),\n  ],\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To inline a single JS file, add the ",(0,s.jsx)(n.code,{children:"?inline"})," URL query to a script file which you want to inline:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    \x3c!-- file JS --\x3e\n    <script src="./main.js" defer="defer"><\/script>\n    \x3c!-- inline JS --\x3e\n    <script src="./script.js?inline"><\/script>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n  </body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"The generated HTML contains inline JS already compiled via Webpack:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<html>\n  <head>\n    \x3c!-- file JS --\x3e\n    <script src=\"js/main.992ba657.js\" defer=\"defer\"><\/script>\n    \x3c!-- inline JS --\x3e\n    <script>\n      (() => {\n        'use strict';\n        console.log('>> script.js');\n      })();\n    <\/script>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n  </body>\n</html>\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["If Webpack is started as ",(0,s.jsx)(n.code,{children:"serve"})," or ",(0,s.jsx)(n.code,{children:"watch"}),",\nthe inlined JS code will contain additional HMR code.\nDon't worry it is ok, so works Webpack ",(0,s.jsx)(n.code,{children:"live reload"}),"."]}),(0,s.jsxs)(n.p,{children:["To enable the source map in inline JS set the Webpack option ",(0,s.jsx)(n.code,{children:"devtool"}),"."]})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const s={},r=l.createContext(s);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);